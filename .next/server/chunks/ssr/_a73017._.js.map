{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/components/Movingtext.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst movingtext = () => {\r\n  return (\r\n    <div id=\"page2\" className=\"min-h-[10vh] w-full py-[8vw] bg-[rgb(239,234,227)]\">\r\n      <div id=\"moving-text\" className=\"relative overflow-hidden whitespace-nowrap\">\r\n        <div className=\"inline-block whitespace-nowrap animate-moving-text\">\r\n          <h1 className=\"inline-block text-[8vw]\">EXPERIENCES </h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n          <h1 className=\"inline-block text-[8vw]\"> ENVIORMENTS</h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n          <h1 className=\"inline-block text-[8vw]\">CONTENT</h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n        </div>\r\n        <div className=\"inline-block whitespace-nowrap animate-moving-text\">\r\n          <h1 className=\"inline-block text-[8vw]\">EXPERIENCES </h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n          <h1 className=\"inline-block text-[8vw]\"> ENVIORMENTS</h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n          <h1 className=\"inline-block text-[8vw]\">CONTENT</h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n        </div>\r\n        <div className=\"inline-block whitespace-nowrap animate-moving-text\">\r\n          <h1 className=\"inline-block text-[8vw]\">EXPERIENCES </h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n          <h1 className=\"inline-block text-[8vw]\"> ENVIORMENTS</h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n          <h1 className=\"inline-block text-[8vw]\">CONTENT</h1>\r\n          <div className=\"inline-block h-[70px] w-[70px] bg-[#fe380e] rounded-[50%] mx-[2vw] mt-[1vw]\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default movingtext\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,MAAM,aAAa;IACjB,qBACE,8OAAC;QAAI,IAAG;QAAQ,WAAU;kBACxB,cAAA,8OAAC;YAAI,IAAG;YAAc,WAAU;;8BAC9B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;;;;;;;8BAEjB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;;;;;;;8BAEjB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,8OAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;AAKzB;uCAEe"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/components/ThreeScene.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst ThreeScene = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    // Scene setup with better performance settings\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000); // Set black background\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true,\r\n      powerPreference: \"high-performance\",\r\n      alpha: false // Disable transparency since we have black bg\r\n    });\r\n    \r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    mountRef.current?.appendChild(renderer.domElement);\r\n\r\n    // Enhanced lighting setup\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\r\n    scene.add(ambientLight);\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1.2);\r\n    directionalLight.position.set(5, 5, 5);\r\n    directionalLight.castShadow = true;\r\n    directionalLight.shadow.mapSize.width = 1024;\r\n    directionalLight.shadow.mapSize.height = 1024;\r\n    scene.add(directionalLight);\r\n\r\n    // Add rim light for better 3D effect\r\n    const rimLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n    rimLight.position.set(-5, 5, -5);\r\n    scene.add(rimLight);\r\n\r\n    camera.position.z = 4;\r\n\r\n    // Improved controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.enableZoom = true;\r\n    controls.minDistance = 2;\r\n    controls.maxDistance = 10;\r\n    controls.autoRotate = true;\r\n    controls.autoRotateSpeed = 1.0;\r\n\r\n    // Load 3D model with loading manager\r\n    const manager = new THREE.LoadingManager();\r\n    const loader = new GLTFLoader(manager);\r\n    \r\n    manager.onProgress = (url, itemsLoaded, itemsTotal) => {\r\n      console.log(`Loading file: ${url}. Loaded ${itemsLoaded}/${itemsTotal} files.`);\r\n    };\r\n\r\n    loader.load(\r\n      '/models/2.glb',\r\n      (gltf) => {\r\n        const model = gltf.scene;\r\n        model.traverse((node) => {\r\n          if (node.isMesh) {\r\n            node.castShadow = true;\r\n            node.receiveShadow = true;\r\n          }\r\n        });\r\n        \r\n        // Center the model\r\n        const box = new THREE.Box3().setFromObject(model);\r\n        const center = box.getCenter(new THREE.Vector3());\r\n        model.position.sub(center);\r\n        \r\n        scene.add(model);\r\n      },\r\n      (progress) => {\r\n        console.log('Loading progress:', (progress.loaded / progress.total * 100) + '%');\r\n      },\r\n      (error) => {\r\n        console.error('Error loading model:', error);\r\n      }\r\n    );\r\n\r\n    // Optimized animation loop\r\n    let frameId;\r\n    const animate = () => {\r\n      frameId = requestAnimationFrame(animate);\r\n      \r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Efficient resize handler with debounce\r\n    let resizeTimeout;\r\n    const handleResize = () => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n      }, 250);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Enhanced cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      cancelAnimationFrame(frameId);\r\n      controls.dispose();\r\n      scene.traverse((object) => {\r\n        if (object.geometry) object.geometry.dispose();\r\n        if (object.material) {\r\n          if (Array.isArray(object.material)) {\r\n            object.material.forEach(material => material.dispose());\r\n          } else {\r\n            object.material.dispose();\r\n          }\r\n        }\r\n      });\r\n      renderer.dispose();\r\n      mountRef.current?.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      ref={mountRef} \r\n      className=\"w-full h-screen\"\r\n      style={{ background: 'black' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThreeScene;\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;;;;AAOA,MAAM,aAAa;IACjB,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAExB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wCAAmC;;QAEnC,+CAA+C;QAC/C,MAAM;QAEN,MAAM;QACN,MAAM;QAYN,0BAA0B;QAC1B,MAAM;QAGN,MAAM;QAON,qCAAqC;QACrC,MAAM;QAMN,oBAAoB;QACpB,MAAM;QASN,qCAAqC;QACrC,MAAM;QACN,MAAM;QAgCN,2BAA2B;QAC3B,IAAI;QACJ,MAAM;QAQN,yCAAyC;QACzC,IAAI;QACJ,MAAM;IA4BR,GAAG,EAAE;IAEL,qBACE,8OAAC;QACC,KAAK;QACL,WAAU;QACV,OAAO;YAAE,YAAY;QAAQ;;;;;;AAGnC;uCAEe"}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/components/Content.jsx"],"sourcesContent":["\"use client\";  // Ensures this component runs on the client\r\n\r\nimport React, { Suspense } from \"react\";\r\nimport \"tailwindcss/tailwind.css\";\r\nimport dynamic from \"next/dynamic\";\r\nimport Movingtext from \"./Movingtext\";\r\nimport ThreeScene from \"./ThreeScene\";\r\n\r\nconst Content = () => {\r\n  return (\r\n    <>\r\n      {/* First Section */}\r\n      <div className=\"px-4 h-[65vh] w-full flex items-end justify-between pb-[3vw] border-b border-black box-border font-[Arial,Helvetica,sans-serif]\">\r\n        <div className=\"left\">\r\n          <h4 className=\"font-bold text-[4vw] md:text-[2vw] tracking-tighter\">\r\n            Sundown is a multi-disciplinary studio focused on creating unique,\r\n            end-to-end experiences and environments.\r\n          </h4>\r\n        </div>\r\n        <div className=\"right text-right\">\r\n          <h1 className=\"text-[14vw] md:text-[10vw] font-semibold leading-[12vw] md:leading-[8vw]\">\r\n            SPACES <br />\r\n            THAT <br />\r\n            INSPIRE\r\n          </h1>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hero Shape */}\r\n      {/* <div className=\"absolute top-[70vh] h-[36vw] w-[46vw] right-0\">\r\n        <div className=\"absolute w-full h-full bg-[#fe380e] rounded-l-[50%] blur-[20px]\"></div>\r\n        <div className=\"absolute w-[30vw] h-[30vw] bg-[#fe380e] rounded-[50%] blur-[35px] animate-[anime2_4s_linear_alternate_infinite]\"></div>\r\n        <div className=\"absolute w-[30vw] h-[30vw] bg-[#fe380e] rounded-[50%] blur-[25px] animate-[anime1_4s_linear_alternate_infinite]\"></div>\r\n      </div> */}\r\n\r\n      {/* Video Section */}\r\n      <div>\r\n        <video\r\n          className=\"w-full relative mt-[4vw] rounded-[25px] h-auto\"\r\n          autoPlay\r\n          loop\r\n          muted\r\n          playsInline\r\n          src=\"/Video/video-1.mp4\"\r\n        />\r\n      </div>\r\n\r\n      {/* Moving Text Section */}\r\n      <div>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <movingtext /> {/* Fixed component name to match import */}\r\n        </Suspense>\r\n      </div>\r\n\r\n      {/* 3D Model Section */}\r\n      {/* <div className=\"relative w-full h-screen bg-gradient-to-b from-[rgb(239,234,227)] to-[#fe380e]/20\">\r\n        <Suspense fallback={\r\n          <div className=\"absolute inset-0 flex items-center justify-center\">\r\n            <div className=\"animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-[#fe380e]\">\r\n              <h1 className=\"text-center text-[#fe380e]\">Loading...</h1>\r\n            </div>\r\n          </div>\r\n        }>\r\n          <ThreeScene />\r\n        </Suspense>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AANA,cAAe,4CAA4C;;;;;;;AAQ3D,MAAM,UAAU;IACd,qBACE;;0BAEE,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;sCAAsD;;;;;;;;;;;kCAKtE,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC;4BAAG,WAAU;;gCAA2E;8CAChF,8OAAC;;;;;gCAAK;8CACR,8OAAC;;;;;gCAAK;;;;;;;;;;;;;;;;;;0BAcjB,8OAAC;0BACC,cAAA,8OAAC;oBACC,WAAU;oBACV,QAAQ;oBACR,IAAI;oBACJ,KAAK;oBACL,WAAW;oBACX,KAAI;;;;;;;;;;;0BAKR,8OAAC;0BACC,cAAA,8OAAC,qMAAA,CAAA,WAAQ;oBAAC,wBAAU,8OAAC;kCAAI;;;;;;;sCACvB,8OAAC;;;;;wBAAa;;;;;;;;;;;;;;AAkBxB;uCAEe"}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/node_modules/next/src/shared/lib/lazy-dynamic/bailout-to-csr.ts"],"sourcesContent":["// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst BAILOUT_TO_CSR = 'BAILOUT_TO_CLIENT_SIDE_RENDERING'\n\n/** An error that should be thrown when we want to bail out to client-side rendering. */\nexport class BailoutToCSRError extends Error {\n  public readonly digest = BAILOUT_TO_CSR\n\n  constructor(public readonly reason: string) {\n    super(`Bail out to client-side rendering: ${reason}`)\n  }\n}\n\n/** Checks if a passed argument is an error that is thrown if we want to bail out to client-side rendering. */\nexport function isBailoutToCSRError(err: unknown): err is BailoutToCSRError {\n  if (typeof err !== 'object' || err === null || !('digest' in err)) {\n    return false\n  }\n\n  return err.digest === BAILOUT_TO_CSR\n}\n"],"names":["BailoutToCSRError","isBailoutToCSRError","BAILOUT_TO_CSR","Error","constructor","reason","digest","err"],"mappings":"AAAA,+GAA+G;;;;;;;;;;;;;;;;IAIlGA,iBAAiB,EAAA;eAAjBA;;IASGC,mBAAmB,EAAA;eAAnBA;;;AAZhB,MAAMC,iBAAiB;AAGhB,MAAMF,0BAA0BG;IAGrCC,YAA4BC,MAAc,CAAE;QAC1C,KAAK,CAAE,wCAAqCA,SAAAA,IAAAA,CADlBA,MAAAA,GAAAA,QAAAA,IAAAA,CAFZC,MAAAA,GAASJ;IAIzB;AACF;AAGO,SAASD,oBAAoBM,GAAY;IAC9C,IAAI,OAAOA,QAAQ,YAAYA,QAAQ,QAAQ,CAAE,CAAA,YAAYA,GAAE,GAAI;QACjE,OAAO;IACT;IAEA,OAAOA,IAAID,MAAM,KAAKJ;AACxB","ignoreList":[0]}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,IAAIC,cAAAA,iBAAiB,CAACH;IAC9B;IAEA,OAAOC;AACT","ignoreList":[0]}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0]}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGP,SAASQ,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUd,UAAUe,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH;YAC7D,MAAMI,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0]}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,cAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0]}},
    {"offset": {"line": 625, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0]}},
    {"offset": {"line": 664, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}