{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/hp/Desktop/sundown/components/ThreeScene.jsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport * as THREE from 'three';\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\r\n\r\nconst ThreeScene = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (typeof window === 'undefined') return;\r\n\r\n    // Scene setup with better performance settings\r\n    const scene = new THREE.Scene();\r\n    scene.background = new THREE.Color(0x000000); // Set black background\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer({ \r\n      antialias: true,\r\n      powerPreference: \"high-performance\",\r\n      alpha: false // Disable transparency since we have black bg\r\n    });\r\n    \r\n    renderer.setPixelRatio(window.devicePixelRatio);\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.shadowMap.enabled = true;\r\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    mountRef.current?.appendChild(renderer.domElement);\r\n\r\n    // Enhanced lighting setup\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\r\n    scene.add(ambientLight);\r\n    \r\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1.2);\r\n    directionalLight.position.set(5, 5, 5);\r\n    directionalLight.castShadow = true;\r\n    directionalLight.shadow.mapSize.width = 1024;\r\n    directionalLight.shadow.mapSize.height = 1024;\r\n    scene.add(directionalLight);\r\n\r\n    // Add rim light for better 3D effect\r\n    const rimLight = new THREE.DirectionalLight(0xffffff, 0.5);\r\n    rimLight.position.set(-5, 5, -5);\r\n    scene.add(rimLight);\r\n\r\n    camera.position.z = 4;\r\n\r\n    // Improved controls\r\n    const controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n    controls.dampingFactor = 0.05;\r\n    controls.enableZoom = true;\r\n    controls.minDistance = 2;\r\n    controls.maxDistance = 10;\r\n    controls.autoRotate = true;\r\n    controls.autoRotateSpeed = 1.0;\r\n\r\n    // Load 3D model with loading manager\r\n    const manager = new THREE.LoadingManager();\r\n    const loader = new GLTFLoader(manager);\r\n    \r\n    manager.onProgress = (url, itemsLoaded, itemsTotal) => {\r\n      console.log(`Loading file: ${url}. Loaded ${itemsLoaded}/${itemsTotal} files.`);\r\n    };\r\n\r\n    loader.load(\r\n      '/models/2.glb',\r\n      (gltf) => {\r\n        const model = gltf.scene;\r\n        model.traverse((node) => {\r\n          if (node.isMesh) {\r\n            node.castShadow = true;\r\n            node.receiveShadow = true;\r\n          }\r\n        });\r\n        \r\n        // Center the model\r\n        const box = new THREE.Box3().setFromObject(model);\r\n        const center = box.getCenter(new THREE.Vector3());\r\n        model.position.sub(center);\r\n        \r\n        scene.add(model);\r\n      },\r\n      (progress) => {\r\n        console.log('Loading progress:', (progress.loaded / progress.total * 100) + '%');\r\n      },\r\n      (error) => {\r\n        console.error('Error loading model:', error);\r\n      }\r\n    );\r\n\r\n    // Optimized animation loop\r\n    let frameId;\r\n    const animate = () => {\r\n      frameId = requestAnimationFrame(animate);\r\n      \r\n      controls.update();\r\n      renderer.render(scene, camera);\r\n    };\r\n    animate();\r\n\r\n    // Efficient resize handler with debounce\r\n    let resizeTimeout;\r\n    const handleResize = () => {\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(() => {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n      }, 250);\r\n    };\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Enhanced cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      cancelAnimationFrame(frameId);\r\n      controls.dispose();\r\n      scene.traverse((object) => {\r\n        if (object.geometry) object.geometry.dispose();\r\n        if (object.material) {\r\n          if (Array.isArray(object.material)) {\r\n            object.material.forEach(material => material.dispose());\r\n          } else {\r\n            object.material.dispose();\r\n          }\r\n        }\r\n      });\r\n      renderer.dispose();\r\n      mountRef.current?.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div \r\n      ref={mountRef} \r\n      className=\"w-full h-screen\"\r\n      style={{ background: 'black' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ThreeScene;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}